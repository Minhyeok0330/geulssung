# 태스크 ID: 4
# 제목: 빅카인즈 API 연동 및 뉴스 시스템
# 상태: 대기중 (pending)
# 선행 태스크: 1, 2
# 우선순위: 높음 (high)
# 설명: 빅카인즈 API 연동, 뉴스 데이터 수집/정제, 키워드 트렌드 분석 및 시각화 기능을 구현합니다.
# 상세 내용:
1. 빅카인즈 API 연동:
   - API 키 관리 및 환경 설정
   - 뉴스 데이터 수집 엔드포인트 구현
   - 키워드 트렌드 데이터 수집 엔드포인트 구현
   - 에러 처리 및 재시도 로직 구현

2. 뉴스 데이터 처리:
   - 수집된 뉴스 데이터 정제 및 저장
   - 중복 뉴스 필터링
   - 키워드 추출 및 빈도수 계산
   - 트렌드 데이터 분석 및 저장

3. 뉴스/키워드 관리 엔드포인트:
   - 뉴스 목록 조회 (페이지네이션, 필터링)
   - 키워드별 뉴스 조회
   - 키워드 트렌드 데이터 조회
   - 인기 키워드 목록 조회

4. 데이터 시각화:
   - 키워드 트렌드 그래프 생성
   - 키워드 간 연관관계 시각화
   - 인기 키워드 워드클라우드
   - 시계열 데이터 시각화

5. 자동화 및 최적화:
   - 주기적 뉴스 데이터 업데이트
   - 캐싱 전략 구현
   - 데이터베이스 인덱싱
   - 성능 모니터링

예시 뉴스 데이터 수집 엔드포인트:
```javascript
app.get('/api/news/collect', authenticate, async (req, res) => {
  try {
    const bigkinds = new BigKindsAPI(process.env.BIGKINDS_API_KEY);
    
    // 최근 24시간 뉴스 수집
    const news = await bigkinds.getNews({
      startDate: moment().subtract(24, 'hours').format('YYYY-MM-DD'),
      endDate: moment().format('YYYY-MM-DD')
    });

    // 뉴스 데이터 정제 및 저장
    const processedNews = await Promise.all(news.map(async (item) => {
      const keywords = await extractKeywords(item.content);
      return {
        keyword: item.keyword,
        title: item.title,
        content: item.content,
        url: item.url,
        published_date: item.publishedDate,
        created_at: new Date()
      };
    }));

    // DB에 저장
    await News.bulkCreate(processedNews);
    
    // 키워드 트렌드 업데이트
    await updateKeywordTrends(processedNews);

    res.status(200).json({ message: '뉴스 데이터 수집 완료' });
  } catch (error) {
    res.status(500).json({ error: '서버 오류' });
  }
});
```

# 테스트 전략:
1. 빅카인즈 API 연동 테스트
   - API 키 인증
   - 데이터 수집
   - 에러 처리
2. 뉴스 데이터 처리 테스트
   - 데이터 정제
   - 중복 필터링
   - 키워드 추출
3. 엔드포인트 테스트
   - 뉴스 목록 조회
   - 키워드 검색
   - 트렌드 데이터 조회
4. 시각화 테스트
   - 그래프 생성
   - 데이터 정확성
   - 렌더링 성능
5. 자동화 테스트
   - 주기적 업데이트
   - 캐싱 동작
   - 성능 모니터링
