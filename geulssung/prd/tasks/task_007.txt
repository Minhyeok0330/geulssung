# 태스크 ID: 7
# 제목: 반응(좋아요/구독) 시스템
# 상태: 대기중 (pending)
# 선행 태스크: 1, 2, 3, 6
# 우선순위: 중간 (medium)
# 설명: 글에 좋아요를 누르거나 작성자를 구독할 수 있는 반응 시스템을 구현합니다.
# 상세 내용:
1. 좋아요 시스템:
   - 글별 좋아요 기능
   - 좋아요 취소 기능
   - 좋아요 수 집계
   - 좋아요 목록 조회
   - 실시간 좋아요 수 업데이트

2. 구독 시스템:
   - 작성자 구독 기능
   - 구독 취소 기능
   - 구독자 목록 조회
   - 구독한 작성자의 글 목록 조회
   - 구독 알림 설정

3. 반응 데이터 처리:
   - 중복 반응 방지
   - 반응 취소 처리
   - 실시간 데이터 동기화
   - 캐싱 전략

4. API 엔드포인트 구현:
   - 좋아요/구독 토글
   - 반응 목록 조회
   - 구독자/구독 중인 작성자 목록
   - 알림 설정

예시 반응 토글 엔드포인트:
```javascript
app.post('/api/reactions/toggle', authenticate, async (req, res) => {
  try {
    const { type, post_id, author_id } = req.body;
    const userId = req.user.id;

    // 입력값 검증
    if (!type || (!post_id && !author_id)) {
      return res.status(400).json({ error: '유효하지 않은 요청입니다.' });
    }

    // 기존 반응 확인
    const existingReaction = await Reaction.findOne({
      where: {
        user_id: userId,
        type,
        post_id: post_id || null,
        author_id: author_id || null
      }
    });

    if (existingReaction) {
      // 반응 취소
      await existingReaction.destroy();
      res.json({ status: 'removed' });
    } else {
      // 새 반응 생성
      const reaction = await Reaction.create({
        user_id: userId,
        type,
        post_id: post_id || null,
        author_id: author_id || null,
        created_at: new Date()
      });
      res.json({ status: 'added', reaction });
    }
  } catch (error) {
    res.status(500).json({ error: '서버 오류' });
  }
});
```

# 테스트 전략:
1. 좋아요 기능 테스트
   - 좋아요 추가/취소
   - 중복 좋아요 방지
   - 좋아요 수 집계
   - 실시간 업데이트

2. 구독 기능 테스트
   - 구독/구독 취소
   - 구독자 목록
   - 구독한 작성자 글 목록
   - 알림 설정

3. 데이터 정합성 테스트
   - 반응 데이터 저장
   - 취소 처리
   - 집계 정확성

4. 성능 테스트
   - 대량 반응 처리
   - 실시간 동기화
   - 캐싱 효과
